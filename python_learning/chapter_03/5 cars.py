cars = ["bmw", "audi", "toyota", "subaru"]
print("Исходный список.")
print(cars)

cars.reverse()
print("\nПревёрнутый список.")
print(cars)
# Чтобы переставить элементы списка в обратном порядке, нужно использовать метод reverse().
# Этот метод просто переходит ка обратному порядку списка, а не сортирует элементы в обратном алфавитном порядке.
# Метод reverse() осуществляет постоянное изменение порядка.
print("\nСнова исходный список.")
cars.reverse()
print(cars)
# Снова применив метод reverse() к обратному списку, можно вернуться к исходному порядку элементов списка.

print("\nNot sorted")
print(cars)

print("\nsorted() ")
print(sorted(cars))
# sorted() позволяет предаставить список в определённом порядке, но не изменяет фактического порядка элементов списка.
# Функции sorted() так же можно передать аргумент reverse=True, чтобы список был предотсавлен в обратном алфавитном порядке(пример: sorted(cars, reverse=True).
print("\nNot sorted again.")
print(cars)

cars.sort()
print("\nsort()")
print(cars)
# sort() позволяет относительно легко отсортировать список. Метод sort() осуществляет постоянное изменение порядка элементов в списке. Список распологается в алфавитном порядке, и вернуться к исходному порядку уже не удаётся.
# Чтобы отсортировать в обратном алфавитном порядке, нужно методу sort() передать аргумент reverse=True (будет выглядеть так: sort(reverse=True).
print("\nNot sorted adain!")
print(cars)

print(len(cars))
# len() определяет длину спика. Чтоббы это сделать нужно в круглые скобки функции вписать название списка(переменную)(пример: len(cars))
# Python подсчитывает элементы списка начиная с 1, а не с 0.
# Чтобы вывести подсчёт с сообщением, нужно писать: str(len(cars)) или str(cars.__len__()).Лучше всего делать таким образом!
# Пример:print("Количество приглашённых гостей: " + str(len(cars)) + "!")
#        print("Количество приглашённых гостей: " + str(cars.__len__()) + "!")
